-- Minimal Executor UI Library: Rebuilt Elements (ALWAYS shows controls)
-- Paste this file, then do: local Library = loadstring(readfile("dark_mirror_ui.lua"))()
-- Or use loadstring(game:HttpGet("..."))() if using a remote loader

local Library = {}
Library.__index = Library

-- Utility: Safe PlayerGui getter
local function getPlayerGui()
    local lp = game:GetService("Players").LocalPlayer
    local pg
    repeat
        pg = lp:FindFirstChildOfClass("PlayerGui")
        if not pg then task.wait() end
    until pg
    return pg
end

function Library:CreateWindow(title, subtitle, version)
    -- Root UI
    local gui = Instance.new("ScreenGui")
    gui.Name = "ExecutorUI"
    gui.Parent = getPlayerGui()
    gui.IgnoreGuiInset = true
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Main window
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 400, 0, 400)
    main.Position = UDim2.new(0.5, -200, 0.5, -200)
    main.BackgroundColor3 = Color3.fromRGB(24, 24, 28)
    main.BorderSizePixel = 0
    main.Parent = gui

    local uic = Instance.new("UICorner", main)
    uic.CornerRadius = UDim.new(0, 12)

    -- Title
    local titlebar = Instance.new("TextLabel")
    titlebar.Size = UDim2.new(1,0,0,42)
    titlebar.BackgroundTransparency = 1
    titlebar.Text = (title or "UI").."  "..(subtitle or "").."  "..(version or "")
    titlebar.Font = Enum.Font.GothamBold
    titlebar.TextSize = 20
    titlebar.TextColor3 = Color3.fromRGB(220, 50, 50)
    titlebar.Parent = main

    -- Tab buttons (for multi-tab support)
    local tabBar = Instance.new("Frame")
    tabBar.Size = UDim2.new(1,0,0,32)
    tabBar.Position = UDim2.new(0,0,0,42)
    tabBar.BackgroundTransparency = 1
    tabBar.Parent = main

    local tabButtonLayout = Instance.new("UIListLayout", tabBar)
    tabButtonLayout.FillDirection = Enum.FillDirection.Horizontal
    tabButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabButtonLayout.Padding = UDim.new(0,8)

    -- Content holder
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1,-20,1,-84)
    contentFrame.Position = UDim2.new(0,10,0,74)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = main

    -- Tabs logic
    local tabs = {}
    local contentFrames = {}

    function Library:CreateTab(tabName)
        -- Tab button
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 90, 1, 0)
        btn.Text = tabName
        btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
        btn.TextColor3 = Color3.new(1,1,1)
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 16
        btn.Parent = tabBar

        -- Tab content
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Size = UDim2.new(1,0,1,0)
        tabContent.Position = UDim2.new(0,0,0,0)
        tabContent.BackgroundTransparency = 1
        tabContent.CanvasSize = UDim2.new(0,0,0,0)
        tabContent.ScrollBarThickness = 6
        tabContent.Visible = false
        tabContent.Parent = contentFrame

        local layout = Instance.new("UIListLayout", tabContent)
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0,8)

        -- Tab switching logic
        btn.MouseButton1Click:Connect(function()
            for _, f in pairs(contentFrames) do f.Visible = false end
            for _, b in pairs(tabs) do b.BackgroundColor3 = Color3.fromRGB(40,40,40) end
            tabContent.Visible = true
            btn.BackgroundColor3 = Color3.fromRGB(220,50,50)
        end)

        table.insert(tabs, btn)
        table.insert(contentFrames, tabContent)
        if #contentFrames == 1 then
            tabContent.Visible = true
            btn.BackgroundColor3 = Color3.fromRGB(220,50,50)
        end

        -- Tab API
        local Tab = {}

        function Tab:CreateSection(text)
            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(1,0,0,28)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.GothamBold
            lbl.TextSize = 17
            lbl.TextColor3 = Color3.fromRGB(220,50,50)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = tabContent
            return lbl
        end

        function Tab:CreateToggle(text, callback)
            local holder = Instance.new("Frame")
            holder.Size = UDim2.new(1,0,0,32)
            holder.BackgroundTransparency = 1
            holder.Parent = tabContent

            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(0.75,0,1,0)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 15
            lbl.TextColor3 = Color3.new(1,1,1)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = holder

            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0,40,0,24)
            btn.Position = UDim2.new(1,-44,0.5,-12)
            btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
            btn.Text = ""
            btn.Parent = holder

            local uic = Instance.new("UICorner", btn)
            uic.CornerRadius = UDim.new(0,12)

            local state = false
            btn.MouseButton1Click:Connect(function()
                state = not state
                btn.BackgroundColor3 = state and Color3.fromRGB(220,50,50) or Color3.fromRGB(60,60,60)
                if callback then pcall(callback, state) end
            end)
            return btn
        end

        function Tab:CreateSlider(text, min, max, default, callback)
            min = min or 0
            max = max or 100
            default = default or min

            local holder = Instance.new("Frame")
            holder.Size = UDim2.new(1,0,0,38)
            holder.BackgroundTransparency = 1
            holder.Parent = tabContent

            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(0.5,0,1,0)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 15
            lbl.TextColor3 = Color3.new(1,1,1)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = holder

            local slider = Instance.new("Frame")
            slider.Size = UDim2.new(0.4,0,0,8)
            slider.Position = UDim2.new(0.55,0,0.5,-4)
            slider.BackgroundColor3 = Color3.fromRGB(60,60,60)
            slider.Parent = holder
            local uic = Instance.new("UICorner", slider)
            uic.CornerRadius = UDim.new(0,4)

            local thumb = Instance.new("Frame")
            thumb.Size = UDim2.new(0,18,0,18)
            thumb.Position = UDim2.new((default-min)/(max-min),-9,0.5,-9)
            thumb.BackgroundColor3 = Color3.fromRGB(220,50,50)
            thumb.Parent = slider
            local uic2 = Instance.new("UICorner", thumb)
            uic2.CornerRadius = UDim.new(0,9)

            local valLbl = Instance.new("TextLabel")
            valLbl.Size = UDim2.new(0,34,1,0)
            valLbl.Position = UDim2.new(1,4,0,0)
            valLbl.BackgroundTransparency = 1
            valLbl.Text = tostring(default)
            valLbl.Font = Enum.Font.GothamBold
            valLbl.TextSize = 13
            valLbl.TextColor3 = Color3.fromRGB(220,50,50)
            valLbl.Parent = slider

            local dragging = false
            local function setFromX(px)
                local ap = slider.AbsolutePosition.X
                local asz = slider.AbsoluteSize.X
                if asz <= 0 then return end
                local rel = math.clamp((px - ap)/asz, 0, 1)
                thumb.Position = UDim2.new(rel, -9, 0.5, -9)
                local value = math.floor(min + (max - min) * rel + 0.5)
                valLbl.Text = tostring(value)
                if callback then pcall(callback, value) end
            end

            thumb.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            thumb.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            thumb.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    setFromX(input.Position.X)
                end
            end)
            slider.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                    setFromX(input.Position.X)
                end
            end)
            slider.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            slider.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    setFromX(input.Position.X)
                end
            end)

            -- Set initial value
            setFromX(slider.AbsolutePosition.X + slider.AbsoluteSize.X * ((default-min)/(max-min)))

            return slider
        end

        function Tab:CreateDropdown(text, options, callback)
            options = options or {}
            local holder = Instance.new("Frame")
            holder.Size = UDim2.new(1,0,0,34)
            holder.BackgroundTransparency = 1
            holder.Parent = tabContent

            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(0.5,0,1,0)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 15
            lbl.TextColor3 = Color3.new(1,1,1)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = holder

            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0,120,0,28)
            btn.Position = UDim2.new(1,-124,0.5,-14)
            btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
            btn.Text = "Select..."
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.TextColor3 = Color3.fromRGB(255,255,255)
            btn.Parent = holder
            local uic = Instance.new("UICorner", btn)
            uic.CornerRadius = UDim.new(0,8)

            local drop = Instance.new("Frame")
            drop.Size = UDim2.new(0,120,0,math.min(8+#options*28, 120))
            drop.Position = UDim2.new(1,-124,1,0)
            drop.BackgroundColor3 = Color3.fromRGB(30,30,30)
            drop.Visible = false
            drop.Parent = holder
            drop.ZIndex = 10
            local uicd = Instance.new("UICorner", drop)
            uicd.CornerRadius = UDim.new(0,8)

            local droplay = Instance.new("UIListLayout", drop)
            droplay.SortOrder = Enum.SortOrder.LayoutOrder
            droplay.Padding = UDim.new(0,2)

            btn.MouseButton1Click:Connect(function()
                drop.Visible = not drop.Visible
            end)

            for _, opt in ipairs(options) do
                local optBtn = Instance.new("TextButton")
                optBtn.Size = UDim2.new(1,0,0,26)
                optBtn.Text = opt
                optBtn.Font = Enum.Font.Gotham
                optBtn.TextSize = 13
                optBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
                optBtn.TextColor3 = Color3.new(1,1,1)
                optBtn.Parent = drop
                optBtn.MouseButton1Click:Connect(function()
                    btn.Text = opt
                    drop.Visible = false
                    if callback then pcall(callback, opt) end
                end)
            end

            return btn
        end

        function Tab:CreateTextbox(text, placeholder, callback)
            local holder = Instance.new("Frame")
            holder.Size = UDim2.new(1,0,0,34)
            holder.BackgroundTransparency = 1
            holder.Parent = tabContent

            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(0.5,0,1,0)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 15
            lbl.TextColor3 = Color3.new(1,1,1)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = holder

            local box = Instance.new("TextBox")
            box.Size = UDim2.new(0,120,0,28)
            box.Position = UDim2.new(1,-124,0.5,-14)
            box.BackgroundColor3 = Color3.fromRGB(40,40,40)
            box.PlaceholderText = placeholder or ""
            box.Font = Enum.Font.Gotham
            box.TextSize = 14
            box.TextColor3 = Color3.fromRGB(220,50,50)
            box.ClearTextOnFocus = false
            box.Parent = holder
            local uic = Instance.new("UICorner", box)
            uic.CornerRadius = UDim.new(0,8)

            box.FocusLost:Connect(function(enter)
                if enter and callback then pcall(callback, box.Text) end
            end)
            return box
        end

        function Tab:CreateButton(text, callback)
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0,140,0,32)
            btn.BackgroundColor3 = Color3.fromRGB(220,50,50)
            btn.Text = text
            btn.Font = Enum.Font.GothamBold
            btn.TextSize = 15
            btn.TextColor3 = Color3.fromRGB(255,255,255)
            btn.Parent = tabContent
            local uic = Instance.new("UICorner", btn)
            uic.CornerRadius = UDim.new(0,10)
            btn.MouseButton1Click:Connect(function()
                if callback then pcall(callback) end
            end)
            return btn
        end

        -- Simple Color Picker: toggles between red, green, blue
        function Tab:CreateColorPicker(text, default, callback)
            local holder = Instance.new("Frame")
            holder.Size = UDim2.new(1,0,0,34)
            holder.BackgroundTransparency = 1
            holder.Parent = tabContent

            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(0.5,0,1,0)
            lbl.BackgroundTransparency = 1
            lbl.Text = text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 15
            lbl.TextColor3 = Color3.new(1,1,1)
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = holder

            local clr = default or Color3.fromRGB(255,0,0)
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0,40,0,28)
            btn.Position = UDim2.new(1,-44,0.5,-14)
            btn.BackgroundColor3 = clr
            btn.Text = ""
            btn.Parent = holder
            local uic = Instance.new("UICorner", btn)
            uic.CornerRadius = UDim.new(0,8)

            local idx = 1
            local palette = {Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255), Color3.fromRGB(255,255,0)}
            btn.MouseButton1Click:Connect(function()
                idx = idx % #palette + 1
                btn.BackgroundColor3 = palette[idx]
                if callback then pcall(callback, palette[idx]) end
            end)
            return btn
        end

        return Tab
    end

    return Library
end

return Library
